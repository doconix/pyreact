{
	"version": 3,
	"file": "scripts/__javascript__/index.mod.js",
	"sources": [
		"scripts/index.py"
	],
	"sourcesContent": [
		"import pyreact\nfrom clock import Clock\n\n\n############################################\n###   Top-level component\n\nclass App(pyreact.Component):\n    def __init__(self, props):\n        # very important to call super\n        super().__init__(props)\n        \n        # state dictionary, just like in JS\n        self.state = {\n            'hour': 0,\n            'minute': 0,\n            'second': 0,\n        }\n        \n\n    def render(self):\n        # using self.element() factory function and returning a list as an example.\n        # see clock.py for the more common self.jsx().\n        return [\n            'The current time is ',\n            self.element(Clock, { \n                'hour': self.state.hour, \n                'minute': self.state.minute,\n                'second': self.state.second,\n                'key': 'clock',\n            }),\n            '.',\n        ]\n\n\n    # called after first render\n    def componentDidMount(self):\n        def ticktock():\n            # create a JS Date object the transcrypt way\n            d = __new__(Date())\n            self.setState({\n                'hour': d.getHours(),\n                'minute': d.getMinutes(),\n                'second': d.getSeconds(),\n            })\n        self.timer = window.setInterval(ticktock, 200);\n    \n    \n    # caled before removal from page\n    def componentWillUnmount(self):\n        window.clearInterval(self.timer);\n    \n    \n############################################\n###   Main method that bootstraps React\n\ndef main():\n    # using React.createElement directly\n    ReactDOM.render(\n        React.createElement(App, {}),\n        document.getElementById('approot')\n    );\n\n\n# run main() when the document is ready\ndocument.addEventListener(\"DOMContentLoaded\", main)\n"
	],
	"mappings": "AAAA;AAiEA;AAjEA;AACA;AAMA;AACA;AAEA;AAGA;AAAA;AAOA;AAKA;AAAA;AAWA;AACA;AAEA;AAIA;AAAA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAMA;AAIA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}